#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Author  : Lucifer
# @Time    : 2018/12/22 7:57 PM
# @File    : cmsexploit.py
# @Software: PyCharm
from gevent import monkey;monkey.patch_all()
from gevent.pool import Pool
import gevent
import sys
import json
import pymysql
import urllib3
sys.path.append('..')
import importlib
from conf.config import GlobalConf
from Evil_Eye.Proxy import findProxy
from Heaven_Hell.database import db
from pyfancy.pyfancy import pyfancy
from Backtracking.SatanLogging import mylog
sys.tracebacklimit = 0

class webpocfactory:
    def __init__(self, url, cookies, threads):
        self.url = url
        self.threads = threads
        self.cookies = cookies
        self.vulns = list()
        self.loadProxy = findProxy()
        #self.loadProxy.connectest(self.url)

    def loadmodule(self):
        requirements = ['sys', 'json', 'warnings', 'hashlib', 'urllib.parse',
                        'time', 'datetime', 'random', 're', 'urllib', 'requests',
                        'urllib3', 'base64', 'bs4', 'selenium', 'string', 'subprocess',
                        'uuid', 'os']
        imported_libs = {lib: importlib.import_module(lib) for lib in requirements}
        globals().update(imported_libs)
        urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

    def pocexec(self, poccode):
        self.proxynode = self.loadProxy.randomProxy()
        exec(poccode)
        gevent.sleep(0)

    def runpocwithcmsname(self, keyword):
        try:
            poclist = list()
            pool = Pool(self.threads)
            self.loadmodule()
            sql = 'SELECT poc FROM webexploit WHERE vulname LIKE "%{}%"'.format(keyword)
            res = db().execute(sql)
            for item in res:
                poclist.append(item['poc'])
            mylog('webexploit', True).log.info(pyfancy().green('[+]针对目标:{0} 加载{1} webpoc {2}个'.format(self.url, keyword, len(poclist))))
            threads = [pool.spawn(self.pocexec, item) for item in poclist]
            gevent.joinall(threads)
            for vuln in self.vulns:
                db().execute('INSERT INTO webvulnlist (url, vulname, vulnurl, isvul, payload, proof, exception) VALUE ("{0}", "{1}", "{2}", "{3}", "{4}", "{5}", "{6}")'.format(self.url, vuln['vulnname'], pymysql.escape_string(str(vuln['vulnurl'])), vuln['isvul'], pymysql.escape_string(str(vuln['payload'])), pymysql.escape_string(str(vuln['proof'])), pymysql.escape_string(str(vuln['exception']))))
                vuln = json.dumps(vuln, indent=4)
                mylog('webexploit').log.debug(pyfancy().magenta('[*] {}'.format(vuln)))
            self.vulns = []
        except Exception as e:
            mylog('webexploit').log.critical(pyfancy().red(e))